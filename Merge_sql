MERGE /*+ PARALLEL(8) */
 INTO SCH_CUST_PRELANDING.C_P_CPP_UPD_UNMERGE TGT
USING (
          SELECT /*+ parallel(8) */ 
          px.ROWID_OBJECT,
          px.EXPRSS_CPTR_FL,
          px.EXPRSS_CPTR_SRC_PRVD_FL,
          px.PRTY_PSTL_CNTCT_PREF,
          px.PRTY_CUST_LAST_UPD_CNTRY
          FROM 
          ((
          select /*+ parallel(8) */ 
          px.ROWID_OBJECT,
          px.EXPRSS_CPTR_FL,
          px.EXPRSS_CPTR_SRC_PRVD_FL,
          px.PRTY_PSTL_CNTCT_PREF,
          px.PRTY_CUST_LAST_UPD_CNTRY, 
          (row_number() over(partition BY px.rowid_object order by px.last_update_date desc)) AS r1 
          from sch_ez_mdm.c_bo_prty_xref px
          WHERE px.rowid_system='CPP') px)
          JOIN  SCH_CUST_PRELANDING.C_P_CPP_UPD_UNMERGE ux
          ON px.ROWID_OBJECT = ux.ROWID_OBJECT
          WHERE px.r1=1
       ) SRC   
ON (TGT.ROWID_OBJECT = SRC.ROWID_OBJECT)
WHEN MATCHED
THEN
  UPDATE SET 
     TGT.EXPRSS_CPTR_FL = CASE WHEN (TGT.EXPRSS_CPTR_FL IS NULL) THEN SRC.EXPRSS_CPTR_FL ELSE TGT.EXPRSS_CPTR_FL  END,
     TGT.EXPRSS_CPTR_SRC_PRVD_FL = CASE WHEN (TGT.EXPRSS_CPTR_SRC_PRVD_FL IS NULL) THEN SRC.EXPRSS_CPTR_SRC_PRVD_FL ELSE TGT.EXPRSS_CPTR_SRC_PRVD_FL END,
     TGT.PRTY_PSTL_CNTCT_PREF = CASE WHEN (TGT.PRTY_PSTL_CNTCT_PREF IS NULL) THEN SRC.PRTY_PSTL_CNTCT_PREF ELSE TGT.PRTY_PSTL_CNTCT_PREF END,
     TGT.PRTY_CUST_LAST_UPD_CNTRY = CASE WHEN (TGT.PRTY_CUST_LAST_UPD_CNTRY IS NULL) THEN SRC.PRTY_CUST_LAST_UPD_CNTRY ELSE TGT.PRTY_CUST_LAST_UPD_CNTRY END;

COMMIT;
