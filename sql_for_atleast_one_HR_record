--The script will find the records which do not have atleast 1 HR record present in the table. The objective is to idenfity the 
--records which are not having atleaset 1 HR system contributed details and to fix them. The simple group by having combo will not
--work as the join will result in multiple system provided raw records and we have to check at a party level, whether any of the sources 
--is HRMS.
-- if there is atleast 1 HR record the sum will be greater than 0. if not sum will be 0.
-- The query will list all whose sum is 0 ie there is no HR records

Insert into <SCHEMA>.<TABLE>
(PRTY_ID_SALESPERS_FK_SRC_BS,PRTY_ID_SALESPERS_FK_SRC_XREF,PRTY_ID_CUST_FK_SRC_BS,PKEY_SRC_OBJECT,ROWID_SYSTEM,STATUS, LOAD_DATE)
(select /*+ parallel(8) */ distinct rlnshp.PRTY_ID_SALESPERS_FK as PRTY_ID_SALESPERS_FK_SRC_BS,
RXRF.PRTY_ID_SALESPERS_FK as PRTY_ID_SALESPERS_FK_SRC_XREF,
rlnshp.PRTY_ID_CUST_FK AS PRTY_ID_CUST_FK_SRC_BS,
RXRF.PKEY_SRC_OBJECT,
RXRF.ROWID_SYSTEM,
'NEW',
sysdate
from <SCHEMA>.<TABLE> rlnshp
JOIN <SCHEMA>.<TABLE> prty
ON rlnshp.PRTY_ID_SALESPERS_FK = prty.ROWID_OBJECT
inner join <SCHEMA>.<TABLE> RXRF
on rlnshp.ROWID_OBJECT=RXRF.ROWID_OBJECT
where rlnshp.CR_STS_CD='ACT' and rlnshp.hub_state_ind=1 and prty.HUB_STATE_IND=1
and RXRF.CR_STS_CD='ACT' and RXRF.hub_state_ind=1
GROUP BY rlnshp.PRTY_ID_SALESPERS_FK, RXRF.PRTY_ID_SALESPERS_FK,RXRF.PKEY_SRC_OBJECT, RXRF.ROWID_SYSTEM, 'NEW',
rlnshp.PRTY_ID_CUST_FK, sysdate
HAVING SUM(CASE WHEN prty.rowid_system = 'HR' THEN 1 ELSE 0 END) =0);

commit;
